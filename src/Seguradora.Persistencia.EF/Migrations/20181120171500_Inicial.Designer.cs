// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Seguradora.Persistencia.EF.Contextos;

namespace Seguradora.Persistencia.EF.Migrations
{
    [DbContext(typeof(SeguradoraDbContext))]
    [Migration("20181120171500_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Seguradora.Dominio.Models.Segurados.Residencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<short?>("Numero");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Residencias");
                });

            modelBuilder.Entity("Seguradora.Dominio.Models.Segurados.Veiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(7);

                    b.HasKey("Id");

                    b.ToTable("Veiculos");
                });

            modelBuilder.Entity("Seguradora.Dominio.Models.Segurados.Vida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11);

                    b.HasKey("Id");

                    b.ToTable("Vidas");
                });

            modelBuilder.Entity("Seguradora.Dominio.Models.Seguros.Seguro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CpfCnpj")
                        .IsRequired()
                        .HasMaxLength(14);

                    b.Property<int>("SeguroSeguradoId");

                    b.Property<byte>("Tipo");

                    b.HasKey("Id");

                    b.HasIndex("SeguroSeguradoId")
                        .IsUnique();

                    b.ToTable("Seguros");
                });

            modelBuilder.Entity("Seguradora.Dominio.Models.Seguros.SeguroSegurado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ResidenciaId");

                    b.Property<int>("SeguroId");

                    b.Property<int?>("VeiculoId");

                    b.Property<int?>("VidaId");

                    b.HasKey("Id");

                    b.HasIndex("ResidenciaId")
                        .IsUnique();

                    b.HasIndex("VeiculoId")
                        .IsUnique();

                    b.HasIndex("VidaId")
                        .IsUnique();

                    b.ToTable("SeguroSegurado");
                });

            modelBuilder.Entity("Seguradora.Dominio.Models.Seguros.Seguro", b =>
                {
                    b.HasOne("Seguradora.Dominio.Models.Seguros.SeguroSegurado", "SeguroSegurado")
                        .WithOne("Seguro")
                        .HasForeignKey("Seguradora.Dominio.Models.Seguros.Seguro", "SeguroSeguradoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Seguradora.Dominio.Models.Seguros.SeguroSegurado", b =>
                {
                    b.HasOne("Seguradora.Dominio.Models.Segurados.Residencia", "Residencia")
                        .WithOne("SeguroSegurado")
                        .HasForeignKey("Seguradora.Dominio.Models.Seguros.SeguroSegurado", "ResidenciaId");

                    b.HasOne("Seguradora.Dominio.Models.Segurados.Veiculo", "Veiculo")
                        .WithOne("SeguroSegurado")
                        .HasForeignKey("Seguradora.Dominio.Models.Seguros.SeguroSegurado", "VeiculoId");

                    b.HasOne("Seguradora.Dominio.Models.Segurados.Vida", "Vida")
                        .WithOne("SeguroSegurado")
                        .HasForeignKey("Seguradora.Dominio.Models.Seguros.SeguroSegurado", "VidaId");
                });
#pragma warning restore 612, 618
        }
    }
}
